import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import axes3d  # Fonction pour la 3D

#influence de l'effort
alpha = 2 # reproduction des proies
beta = 0.2 #taux de faim des prédateurs
gamma = 0.5 # taux de mort des prédateurs
delta = 0.02 # reproduction des prédateurs
 # paramètre de l'effort
a = 0.2
c = a + 0.001
sigma = 0.2
omega = 0.1

# Temps d'intégration
dt = 0.01

# durée de la simulation
N = 100000
t = np.arange(N)*dt

#valeurs initiales
x0 = 100
y0 = 5
w0 = 0.1



# f définie l'évolution de la population
#alpha représente le taux de reproduction des proies intrasèque
#beta le taux de mortalité
#delta le taux de reproduction des prédateurs
#gamma le taux de mortalité intrasèque des prédateurs

def f(x,y,w):
    x_0 = x * (alpha - beta * y + omega * w)  #évolution des proies
    y_0 = y * (delta * x - gamma - omega * w)   #évolution des predateurs
    w_0 = sigma *(0.5*x_0 - 2*y_0 * w) #évolution de l'effort
    # w_0 = sigma * np.exp(((w-1)/0.9)**2) * (c-a)
    return x_0, y_0, w_0

def RunchKutta(x,y,w): #Integration par la méthode de Runch Kutta
    x1,y1,w1 = f(x,y,w)
    x2,y2,w2 = f(x + x1 * dt * 0.5, y + y1 * dt * 0.5 , w + w1 * dt *0.5)
    x3,y3,w3 = f(x + x2 * dt * 0.5, y + y2 * dt * 0.5, w+ w2 *dt *0.5)
    x4,y4,w4 = f(x + x3 * dt,y + y3*dt,w + w3 * dt)
    X = x + dt * (x1/6 + x2/3 + x3/3 +x4/6)
    Y = y + dt * (y1/6 + y2/3 + y3/3 +y4/6)
    W = w + dt * (w1/6 + w2/3 + w3/3 +w4/6)
    return X,Y,W

Proies = [0] * N
Predateurs = [0] * N
Effort = [0] * N


#Valeurs Initiales
Proies[0] = x0
Predateurs[0] = y0
Effort[0] = w0


for i in range (0,N-1):
    Proies[i+1], Predateurs[i+1], Effort[i+1] = RunchKutta( Proies[i], Predateurs[i] ,Effort[i])

#    DProies[i+1] , DPredateurs[i+1] = derivation(Proies[i+1],Proies[i],Predateurs[i+1],Predateurs[i])


plt.plot(t,Proies)
plt.title('Nombre de Proies au cours du temps Pour alpha = 0.5 , beta = %p,gamma = 0.5,delta = 0.02')
plt.xlabel("temps")
plt.ylabel("Nombre de Proies")
plt.show()


plt.plot(t,Predateurs)
plt.title("Nombre de Prédateur au cours du temps Pour alpha = 0.5,beta = 0.2,gamma = 0.5,delta = 0.02 ")
plt.xlabel("temps")
plt.ylabel("Nombre de Proies")
plt.show()


plt.plot(Proies, Predateurs)
plt.title("Espace des Phases Pour alpha = 0.5,beta = 0.2,gamma = 0.5,delta = 0.02 ")
plt.xlabel("Nombre de Proies")
plt.ylabel("Nombre de Predateurs")
plt.show()

plt.plot(Effort, Predateurs)
plt.title("Espace des Phases Pour alpha = 0.5,beta = 0.2,gamma = 0.5,delta = 0.02 ")
plt.xlabel("Mesure de l'effort")
plt.ylabel("Nombre de Predateurs")
plt.show()

plt.plot(Effort, Proies)
plt.title("Espace des Phases Pour alpha = 0.5,beta = 0.2,gamma = 0.5,delta = 0.02 ")
plt.xlabel("Mesure de l'effort")
plt.ylabel("Nombre de Proies")
plt.show()

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter3D(Proies, Predateurs, Effort,alpha = 0.8,marker ='o')
ax.set_title("Evolutions des 3 variables")
plt.show()
